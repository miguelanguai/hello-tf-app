name: "Terraform"

on:
  workflow_dispatch:
    inputs:
      # Terraform action you want to perform
      action:
        description: 'Terraform Action to Perform'
        type: choice
        options:
        - Terraform_apply
        - Terraform_destroy

jobs:
  terraform_apply:
    name: "Terraform_apply"
    if: ${{ github.event.inputs.action == 'Terraform_apply' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del c贸digo
        uses: actions/checkout@v4

      - name: Configurar credenciales de AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: echo "Configuraci贸n de AWS lista"

      - name: Descargar el estado de Terraform desde S3 (si existe)
        id: download_tfstate
        continue-on-error: true  # Sigue aunque el archivo no exista
        run: aws s3 cp s3://terraform-destroyer-magv/backend.tf terraform.tfstate || echo "No se encontr贸 tfstate"

      - name: Inicializar Terraform
        run: terraform init

      - name: Planear Terraform
        id: plan
        run: terraform plan -out=tfplan
        continue-on-error: true  # No detiene la ejecuci贸n si hay errores

      - name: Aplicar Terraform
        run: terraform apply -auto-approve tfplan

      - name: Guardar el nuevo estado en S3
        run: aws s3 cp terraform.tfstate s3://terraform-destroyer-magv/backend.tf
  
  terraform_destroy:
    name: "Terraform_destroy"
    if: ${{ github.event.inputs.action == 'Terraform_destroy' }}
    runs-on: ubuntu-latest
    steps:
      - name: AWS Plan Copy
        run: aws s3 cp s3://terraform-destroyer-magv/backend.tf terraform.tfstate
        id: copy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.REGION }}

      - name: Show Destroy plan
        run: terraform plan -destroy
        continue-on-error: true

      - name: Destroy resources jobs
        id: destroy
        run: terraform destroy -auto-approve

      - name: Delete plan file
        if: steps.destroy.outcome == 'success'
        run: aws s3 rm s3://terraform-destroyer-magv/backend.tf
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.REGION }}